// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Serialization > should fail to serialize closures 1`] = `
"{
    \\"_serializeVerId\\": \\"v8\\",
    \\"what\\": {
        \\"ctr\\": 0,
        \\"ps\\": {
            \\"fn\\": {
                \\"ctr\\": 15,
                \\"ps\\": {},
                \\"fnName\\": \\"\\",
                \\"arg\\": \\"() => null\\"
            },
            \\"args\\": {
                \\"raw\\": []
            },
            \\"vArgs\\": {
                \\"arr\\": [
                    {
                        \\"ctr\\": \\"AsyncGeneratorFunction\\",
                        \\"ps\\": {},
                        \\"fnName\\": \\"test1\\",
                        \\"arg\\": \\"async function* test1() {\\\\n          await new Promise((resolve) => setTimeout(resolve, 1e3));\\\\n          yield n;\\\\n        }\\"
                    },
                    {
                        \\"ctr\\": \\"AsyncGeneratorFunction\\",
                        \\"ps\\": {},
                        \\"fnName\\": \\"test2\\",
                        \\"arg\\": \\"async function* test2() {\\\\n            await new Promise((resolve) => setTimeout(resolve, 1e3));\\\\n            yield n;\\\\n          }\\"
                    },
                    {
                        \\"ctr\\": \\"AsyncGeneratorFunction\\",
                        \\"ps\\": {},
                        \\"fnName\\": \\"\\",
                        \\"arg\\": \\"async function* () {\\\\n            yield n;\\\\n          }\\"
                    },
                    {
                        \\"ctr\\": \\"AsyncFunction\\",
                        \\"ps\\": {},
                        \\"fnName\\": \\"\\",
                        \\"arg\\": \\"async () => n\\"
                    },
                    {
                        \\"ctr\\": 15,
                        \\"ps\\": {},
                        \\"fnName\\": \\"\\",
                        \\"arg\\": \\"() => {\\\\n            return n;\\\\n          }\\"
                    }
                ]
            }
        }
    }
}"
`;

exports[`Serialization > should fail to serialize objects like Response 1`] = `
"{
    \\"_serializeVerId\\": \\"v8\\",
    \\"what\\": {
        \\"ctr\\": 0,
        \\"ps\\": {
            \\"fn\\": {
                \\"ctr\\": 15,
                \\"ps\\": {},
                \\"fnName\\": \\"\\",
                \\"arg\\": \\"() => null\\"
            },
            \\"args\\": {
                \\"raw\\": []
            },
            \\"vArgs\\": {
                \\"arr\\": [
                    {
                        \\"ctr\\": \\"Response\\",
                        \\"ps\\": {}
                    }
                ]
            }
        }
    }
}"
`;

exports[`Serialization > should fail to serialize promises 1`] = `
"{
    \\"_serializeVerId\\": \\"v8\\",
    \\"what\\": {
        \\"ctr\\": 0,
        \\"ps\\": {
            \\"fn\\": {
                \\"ctr\\": 15,
                \\"ps\\": {},
                \\"fnName\\": \\"\\",
                \\"arg\\": \\"() => null\\"
            },
            \\"args\\": {
                \\"raw\\": []
            },
            \\"vArgs\\": {
                \\"arr\\": [
                    {
                        \\"resolve\\": {
                            \\"_serializeVerId\\": \\"v8\\",
                            \\"what\\": \\"<Unresolved Promise>\\"
                        }
                    }
                ]
            }
        }
    }
}"
`;

exports[`Serialization > should serialize Date, URL, Error, BigInt, RegExp and boxed primitives like String and Number 1`] = `
"{
    \\"_serializeVerId\\": \\"v8\\",
    \\"what\\": {
        \\"ctr\\": 0,
        \\"ps\\": {
            \\"fn\\": {
                \\"ctr\\": 15,
                \\"ps\\": {},
                \\"fnName\\": \\"\\",
                \\"arg\\": \\"() => null\\"
            },
            \\"args\\": {
                \\"raw\\": []
            },
            \\"vArgs\\": {
                \\"arr\\": [
                    {
                        \\"ctr\\": 19,
                        \\"ps\\": {},
                        \\"arg\\": \\"2023-07-23T19:33:45.093Z\\"
                    },
                    {
                        \\"ctr\\": 18,
                        \\"ps\\": {},
                        \\"arg\\": \\"https://example.com/\\"
                    },
                    {
                        \\"bigint\\": \\"123\\"
                    },
                    {
                        \\"ctr\\": 10,
                        \\"arg\\": \\"test\\"
                    },
                    {
                        \\"ctr\\": 12,
                        \\"arg\\": \\"test\\"
                    },
                    {
                        \\"ctr\\": 11,
                        \\"arg\\": \\"123\\"
                    }
                ]
            }
        }
    }
}"
`;

exports[`Serialization > should serialize JSON primitives 1`] = `
"{
    \\"_serializeVerId\\": \\"v8\\",
    \\"what\\": {
        \\"ctr\\": 0,
        \\"ps\\": {
            \\"fn\\": {
                \\"ctr\\": 15,
                \\"ps\\": {},
                \\"fnName\\": \\"\\",
                \\"arg\\": \\"() => null\\"
            },
            \\"args\\": {
                \\"raw\\": []
            },
            \\"vArgs\\": {
                \\"arr\\": [
                    \\"test\\",
                    1,
                    true,
                    {
                        \\"raw\\": {
                            \\"test\\": \\"test\\"
                        }
                    },
                    {
                        \\"arr\\": [
                            \\"test\\",
                            1,
                            true,
                            {
                                \\"raw\\": {
                                    \\"test\\": \\"test\\"
                                }
                            }
                        ]
                    }
                ]
            }
        }
    }
}"
`;

exports[`Serialization > should serialize Object graphs with cycles, Arrays with enumerable, non-numeric properties and sparse arrays 1`] = `
"{
    \\"_serializeVerId\\": \\"v8\\",
    \\"what\\": {
        \\"ctr\\": 0,
        \\"ps\\": {
            \\"fn\\": {
                \\"ctr\\": 15,
                \\"ps\\": {},
                \\"fnName\\": \\"\\",
                \\"arg\\": \\"() => null\\"
            },
            \\"args\\": {
                \\"raw\\": []
            },
            \\"vArgs\\": {
                \\"arr\\": [
                    {
                        \\"ctr\\": 0,
                        \\"ps\\": {
                            \\"test\\": {
                                \\"raw\\": \\"test\\"
                            },
                            \\"obj\\": {
                                \\"seen\\": 3
                            }
                        }
                    },
                    {
                        \\"arr\\": [
                            \\"test\\",
                            1,
                            true,
                            {
                                \\"raw\\": {
                                    \\"test\\": \\"test\\"
                                }
                            }
                        ],
                        \\"isl\\": [
                            {
                                \\"@\\": 0,
                                \\"arr\\": [
                                    \\"test\\",
                                    1,
                                    true,
                                    {
                                        \\"test\\": \\"test\\"
                                    }
                                ]
                            }
                        ],
                        \\"ps\\": {
                            \\"10\\": \\"test\\",
                            \\"test\\": \\"test\\"
                        },
                        \\"len\\": 11
                    }
                ]
            }
        }
    }
}"
`;

exports[`Serialization > should serialize Typed Arrays (Float64Array, Int64Array, etc.) and Maps & Sets 1`] = `
"{
    \\"_serializeVerId\\": \\"v8\\",
    \\"what\\": {
        \\"ctr\\": 0,
        \\"ps\\": {
            \\"fn\\": {
                \\"ctr\\": 15,
                \\"ps\\": {},
                \\"fnName\\": \\"\\",
                \\"arg\\": \\"() => null\\"
            },
            \\"args\\": {
                \\"raw\\": []
            },
            \\"vArgs\\": {
                \\"arr\\": [
                    {
                        \\"ctr\\": 9,
                        \\"ab8\\": \\"\\\\u0000\\\\u0000\\\\u0000\\\\u0000\\\\u0000\\\\u0000รฐ?\\\\u0000\\\\u0000\\\\u0000\\\\u0000\\\\u0000\\\\u0000\\\\u0000@\\\\u0000\\\\u0000\\\\u0000\\\\u0000\\\\u0000\\\\u0000\\\\b@\\"
                    },
                    {
                        \\"ctr\\": 5,
                        \\"ab8\\": \\"\\\\u0001\\\\u0000\\\\u0002\\\\u0000\\\\u0003\\\\u0000\\"
                    },
                    {
                        \\"mapKeys\\": {
                            \\"arr\\": [
                                \\"test\\"
                            ]
                        },
                        \\"mapVals\\": {
                            \\"arr\\": [
                                \\"test\\"
                            ]
                        }
                    },
                    {
                        \\"setVals\\": {
                            \\"arr\\": [
                                \\"test\\",
                                \\"123\\"
                            ]
                        }
                    }
                ]
            }
        }
    }
}"
`;

exports[`Serialization > should serialize functions 1`] = `
"{
    \\"_serializeVerId\\": \\"v8\\",
    \\"what\\": {
        \\"ctr\\": 0,
        \\"ps\\": {
            \\"fn\\": {
                \\"ctr\\": 15,
                \\"ps\\": {},
                \\"fnName\\": \\"\\",
                \\"arg\\": \\"() => null\\"
            },
            \\"args\\": {
                \\"raw\\": []
            },
            \\"vArgs\\": {
                \\"arr\\": [
                    {
                        \\"ctr\\": \\"AsyncGeneratorFunction\\",
                        \\"ps\\": {},
                        \\"fnName\\": \\"test1\\",
                        \\"arg\\": \\"async function* test1() {\\\\n          await new Promise((resolve) => setTimeout(resolve, 1e3));\\\\n          yield \\\\\\"test\\\\\\";\\\\n        }\\"
                    },
                    {
                        \\"ctr\\": \\"AsyncGeneratorFunction\\",
                        \\"ps\\": {},
                        \\"fnName\\": \\"test2\\",
                        \\"arg\\": \\"async function* test2() {\\\\n            await new Promise((resolve) => setTimeout(resolve, 1e3));\\\\n            yield \\\\\\"test\\\\\\";\\\\n          }\\"
                    },
                    {
                        \\"ctr\\": \\"AsyncGeneratorFunction\\",
                        \\"ps\\": {},
                        \\"fnName\\": \\"\\",
                        \\"arg\\": \\"async function* () {\\\\n            yield \\\\\\"test\\\\\\";\\\\n          }\\"
                    },
                    {
                        \\"ctr\\": \\"AsyncFunction\\",
                        \\"ps\\": {},
                        \\"fnName\\": \\"\\",
                        \\"arg\\": \\"async () => 5\\"
                    },
                    {
                        \\"ctr\\": 15,
                        \\"ps\\": {},
                        \\"fnName\\": \\"\\",
                        \\"arg\\": \\"() => {\\\\n            return 5;\\\\n          }\\"
                    }
                ]
            }
        }
    }
}"
`;

exports[`Serialization > should serialize undefined, null, NaN, Infinity, -Infinity 1`] = `
"{
    \\"_serializeVerId\\": \\"v8\\",
    \\"what\\": {
        \\"ctr\\": 0,
        \\"ps\\": {
            \\"fn\\": {
                \\"ctr\\": 15,
                \\"ps\\": {},
                \\"fnName\\": \\"\\",
                \\"arg\\": \\"() => null\\"
            },
            \\"args\\": {
                \\"raw\\": []
            },
            \\"vArgs\\": {
                \\"arr\\": [
                    {
                        \\"undefined\\": true
                    },
                    {
                        \\"raw\\": null
                    },
                    {
                        \\"number\\": \\"NaN\\"
                    },
                    {
                        \\"number\\": \\"Infinity\\"
                    },
                    {
                        \\"number\\": \\"-Infinity\\"
                    }
                ]
            }
        }
    }
}"
`;
